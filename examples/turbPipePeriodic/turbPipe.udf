//
// nekRS User Defined File
//
#include <math.h>
#include "udf.hpp"
#include "casedata.h"

/* User Functions */

occa::kernel userfKernel; 

void userf(ins_t *ins, dfloat time, occa::memory o_U, occa::memory o_FU)
{
  dfloat mue, rho;
  ins->options.getArgs("VISCOSITY", mue);
  ins->options.getArgs("DENSITY", rho);
  const dfloat RE_B = rho/mue; 
  const dfloat DPDZ = 4 * (2*RE_TAU/RE_B)*(2*RE_TAU/RE_B);
  userfKernel(ins->Nlocal, ins->fieldOffset, DPDZ, o_FU);
}


/* UDF Functions */                                                      

void UDF_LoadKernels(ins_t *ins)
{
  userfKernel = udfBuildKernel(ins, "cfillz");
}

void UDF_Setup(ins_t *ins)
{
  // get IC from nek
  if (!ins->readRestartFile) nek_copyTo(ins->startTime);

  // assign function pointer to drive flow by constant mean pressure gradient
  udf.uEqnSource = &userf;
}

void UDF_ExecuteStep(ins_t *ins, dfloat time, int tstep)
{
  if (ins->isOutputStep) {
    nek_ocopyFrom(time, tstep);
    nek_userchk();
  }
}
