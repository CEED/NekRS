@kernel void pressureRhsHex3D(const dlong N,
                              const dlong fieldOffset,
                              const int viscContribution,
                              @ restrict const dfloat *MUE,
                              @ restrict const dfloat *iRHO,
                              @ restrict const dfloat *BF,
                              @ restrict const dfloat *NC,
                              @ restrict const dfloat *gDIV,
                              @ restrict dfloat *rhsU)
{
  for (dlong n = 0; n < N; ++n; @tile(p_blockSize, @outer, @inner))
    if (n < N) {
      dfloat sumX = BF[n + 0 * fieldOffset];
      dfloat sumY = BF[n + 1 * fieldOffset];
      dfloat sumZ = BF[n + 2 * fieldOffset];

      if (viscContribution) {
        const dfloat factor = 4. / 3;
        const dfloat nu = MUE[n] * iRHO[n];

        sumX -= nu * (NC[n + 0 * fieldOffset] - factor * gDIV[n + 0 * fieldOffset]);
        sumY -= nu * (NC[n + 1 * fieldOffset] - factor * gDIV[n + 1 * fieldOffset]);
        sumZ -= nu * (NC[n + 2 * fieldOffset] - factor * gDIV[n + 2 * fieldOffset]);
      }

      rhsU[n + 0 * fieldOffset] = sumX;
      rhsU[n + 1 * fieldOffset] = sumY;
      rhsU[n + 2 * fieldOffset] = sumZ;
    }
}
